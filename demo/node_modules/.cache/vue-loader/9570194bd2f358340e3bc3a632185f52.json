{"remainingRequest":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\src\\components\\login.vue?vue&type=style&index=0&id=10d9df09&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\src\\components\\login.vue","mtime":1591771523077},{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\骆猹\\Desktop\\chat\\chatroom\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sb2dpbl9jb250YWluZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTQsIDk5LCAxNjgpOw0KICBoZWlnaHQ6IDEwMCU7DQp9DQoubG9naW5fYm94IHsNCiAgd2lkdGg6IDQ1MHB4Ow0KICBoZWlnaHQ6IDMwMHB4Ow0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogIGJvcmRlcjo1cHggc29saWQgIzM5YzViYjsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgbGVmdDogNTAlOw0KICB0b3A6IDUwJTsNCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7DQp9DQouYXZhdGFyX2JveCB7DQogIGhlaWdodDogMTMwcHg7DQogIHdpZHRoOiAxMzBweDsNCiAgYm9yZGVyOiAxcHggc29saWQgI2VlZTsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KICBwYWRkaW5nOiAxMHB4Ow0KICBib3gtc2hhZG93OiAwIDAgMTBweDsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBsZWZ0OiA1MCU7DQogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICBpbWcgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGhlaWdodDogMTAwJTsNCiAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsNCiAgfQ0KfQ0KLmJ0bnMgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOw0KfQ0KLmxvZ2luX2Zvcm0gew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGJvdHRvbTogMDsNCiAgd2lkdGg6IDEwMCU7DQogIHBhZGRpbmc6IDAgMjBweDsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCn0NCg=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"login_container\">\r\n    <div class=\"login_box\">\r\n      <div class=\"avatar_box\">\r\n        <img src=\"../assets/demo.jpg\" alt />\r\n      </div>\r\n      <!--ref中的值是表单的引用对象，model用于绑定数据，rules用于绑定验证规则-->\r\n      <el-form ref=\"loginformRef\" class=\"login_form\" :model=\"loginForm\" :rules=\"loginFormRules\">\r\n        <!-- 用户名 -->\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            prefix-icon=\"iconfont icon-user\"\r\n            placeholder=\"请输入用户名\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            prefix-icon=\"iconfont icon-3702mima\"\r\n            placeholder=\"请输入密码\"\r\n            type=\"password\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮区 -->\r\n        <el-form-item class=\"btns\">\r\n          <el-button type=\"primary\" round @click=\"login\">登录</el-button>\r\n          <el-button type=\"primary\" round @click=\"addDialogVisible=true\">注册</el-button>\r\n          <el-button type=\"info\" round @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <!--注册的对话框-->\r\n    <el-dialog title=\"注册\" :visible.sync=\"addDialogVisible\" width=\"30%\">\r\n      <el-form ref=\"addformRef\" :model=\"addForm\" :rules=\"addFormRules\">\r\n        <!-- 用户名 -->\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"addForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <!-- 昵称 -->\r\n        <el-form-item prop=\"name\">\r\n          <el-input v-model=\"addForm.name\" placeholder=\"请输入昵称\"></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"addForm.password\" placeholder=\"请输入密码\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <!-- 密码确认 -->\r\n        <el-form-item prop=\"confirm\">\r\n          <el-input v-model=\"addForm.confirm\" placeholder=\"请确认密码\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"register\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var that=this;\r\n    //用户名验证函数\r\n    var usernameCheck=async function(rule,value,callback){\r\n      const {data:result}=await that.$http.post('/usernameCheck',{username:value});\r\n        console.log(result);\r\n        if(result==\"success\"){\r\n          that.$message.success(\"账户可用^w^\"); \r\n          return callback();}\r\n        that.$message.error(\"这个账号已经被注册啦>_<\");\r\n        callback(new Error(\"重名啦\"));\r\n    }\r\n    //昵称验证函数\r\n    var nameCheck=async function(rule,value,callback){\r\n      const {data:result}=await that.$http.post('/nameCheck',{name:value});\r\n        if(result==\"success\")\r\n        { that.$message.success(\"昵称可用^w^\");\r\n          return callback();}\r\n        that.$message.error(\"请想一个独一无二的昵称>_<\");\r\n        callback(new Error(\"重名啦\"));\r\n    }\r\n    return {\r\n      // 这是登录表单的数据对象\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      //表单验证规则\r\n      loginFormRules: {\r\n        //用户名和密码保证6-16位之间（改变即验证）\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"change\" },\r\n          { min: 3, max: 16, message: \"请输入3-16位字符\", trigger: \"change\" }\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"change\" },\r\n          { min: 6, max: 16, message: \"请输入6-16位字符\", trigger: \"change\" }\r\n        ]\r\n      },\r\n      //隐藏弹出表单\r\n      addDialogVisible: false,\r\n      //提交注册的对象\r\n      addForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        confirm: \"\"\r\n      },\r\n      \r\n      //提交表单的规则\r\n      addFormRules: {\r\n        username: [\r\n          { required: true, message: \"没号咋登？\", trigger: \"change\" },\r\n          {\r\n            min: 3,\r\n            max: 16,\r\n            message: \"账号要在3-16字符之间\",\r\n            trigger: \"change\"\r\n          },\r\n          {validator: usernameCheck, trigger:'blur'}\r\n        ],\r\n        name: [\r\n          { required: true, message: \"装逼不能没有姓名\", trigger: \"change\" },\r\n          {\r\n            min: 3,\r\n            max: 10,\r\n            message: \"昵称只能在3-10个字符之间\",\r\n            trigger: \"change\"\r\n          },\r\n          {validator: nameCheck, trigger:'blur'}\r\n        ],\r\n        password: [\r\n          { required: true, message: \"密码都不填？！\", trigger: \"change\" },\r\n          {\r\n            min: 6,\r\n            max: 16,\r\n            message: \"密码要在6-16字符之间\",\r\n            trigger: \"change\"\r\n          }\r\n        ],\r\n        confirm: [\r\n          { required: true, message: \"密码都不填？！\", trigger: \"change\" },\r\n          {\r\n            min: 6,\r\n            max: 16,\r\n            message: \"密码要在6-16字符之间\",\r\n            trigger: \"change\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    //重置函数\r\n    resetForm() {\r\n      this.$refs.loginformRef.resetFields();\r\n    },\r\n    //登录函数\r\n    login() {\r\n      //validate函数用于预校验（提交前的检测）参数是一个回调函数，回调函数的参数是一个布尔值提交成功则返回true反之false\r\n      //就是用来检测输入的内容是否符合rule里的所有规则\r\n      this.$refs.loginformRef.validate(async valid => {\r\n        if (!valid) return;\r\n        //配置好根路径以后可以直接使用this.http来发起post请求，登录验证接口的路径是login，方法是post，需要的数据是\r\n        //name和password，在这里直接用对象传入\r\n        const result = await this.$http.post(\"login\", this.loginForm);\r\n        if (result.data.length == 0) {\r\n          return this.$message({\r\n            message: \"淦！登录失败了..\",\r\n            type: \"error\",\r\n            center: true,\r\n            showClose: true\r\n          });\r\n        }\r\n        this.$message({\r\n          message: \"进...进来了...\",\r\n          type: \"success\",\r\n          center: true,\r\n          showClose: true\r\n        });\r\n        //1.登录成功后获得一个token令牌，保存到客户端的sessionStorage中\r\n        //    1.1项目中除去登录之外的其他api接口，必须在登录之后才能访问\r\n        //    1.2token令牌只在当前网站打开期间生效，所以将其保存在sessionStorage中\r\n        window.sessionStorage.setItem(\"token\", result.data[0]._id);\r\n        window.sessionStorage.setItem(\"name\", result.data[0].name);\r\n        //2.通过编程式导航栏跳转到后台主页，路由地址是/home\r\n        this.$router.push(\"/home\");\r\n      });\r\n    },\r\n    //注册函数\r\n    register() {\r\n      this.$refs.addformRef.validate(async valid => {\r\n        if (!valid) return this.$message.error(\"输入有误>_<\");\r\n        if (this.addForm.password !== this.addForm.confirm)\r\n          return this.$message.error(\"两次输入的密码不对>_<\");\r\n        const {data:result}=await this.$http.post(\"/register\",this.addForm);\r\n        if(result==\"error\")return this.$message.error(\"注册失败QAQ\");\r\n        this.$message.success(\"注册成功^0^\");\r\n        this.addDialogVisible = false;\r\n        this.$refs.addformRef.resetFields();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login_container {\r\n  background-color: rgb(14, 99, 168);\r\n  height: 100%;\r\n}\r\n.login_box {\r\n  width: 450px;\r\n  height: 300px;\r\n  position: absolute;\r\n  background-color: #fff;\r\n  border:5px solid #39c5bb;\r\n  border-radius: 10px;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n.avatar_box {\r\n  height: 130px;\r\n  width: 130px;\r\n  border: 1px solid #eee;\r\n  border-radius: 50%;\r\n  padding: 10px;\r\n  box-shadow: 0 0 10px;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: #fff;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    background-color: #eee;\r\n  }\r\n}\r\n.btns {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.login_form {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n}\r\n</style>"]}]}